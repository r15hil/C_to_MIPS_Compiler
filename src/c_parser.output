Nonterminals useless in grammar

   declaration
   init_declarator_list
   init_declarator
   initializer
   initializer_list
   statement
   labeled_statement
   compound_statement
   declaration_list
   statement_list
   expression_statement
   selection_statement
   iteration_statement
   jump_statement
   translation_unit
   external_declaration
   function_definition


Terminals unused in grammar

   CONSTANT
   STRING_LITERAL
   T_DO
   LEFT_OP
   RIGHT_OP
   LE_OP
   GE_OP
   EQ_OP
   NE_OP
   MUL_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   ADD_ASSIGN
   SUB_ASSIGN
   LEFT_ASSIGN
   RIGHT_ASSIGN
   AND_ASSIGN
   XOR_ASSIGN
   OR_ASSIGN
   TYPE_NAME
   T_BREAK
   T_CASE
   T_CONTINUE
   T_DEFAULT
   T_GOTO
   T_RETURN
   T_SWITCH
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   CHAR
   SHORT
   INT
   LONG
   SIGNED
   UNSIGNED
   FLOAT
   DOUBLE
   CONST
   VOLATILE
   VOID
   STRUCT
   UNION
   CASE
   DEFAULT
   T_IF
   T_ELSE
   SWITCH
   T_WHILE
   DO
   T_FOR
   GOTO
   CONTINUE
   BREAK
   RETURN


Rules useless in grammar

  163 declaration: declaration_specifiers T_SEMICOLON
  164            | declaration_specifiers init_declarator_list T_SEMICOLON

  165 init_declarator_list: init_declarator
  166                     | init_declarator_list T_COMMA init_declarator

  167 init_declarator: declarator
  168                | declarator T_ASSIGN initializer

  169 initializer: assignment_expression
  170            | T_LCURLY initializer_list T_RCURLY
  171            | T_LCURLY initializer_list T_COMMA T_RCURLY

  172 initializer_list: initializer
  173                 | initializer_list T_COMMA initializer

  174 statement: labeled_statement
  175          | compound_statement
  176          | expression_statement
  177          | selection_statement
  178          | iteration_statement
  179          | jump_statement

  180 labeled_statement: T_IDENTIFIER T_COLON statement
  181                  | T_CASE constant_expression T_COLON statement
  182                  | T_DEFAULT T_COLON statement

  183 compound_statement: T_LCURLY T_RCURLY
  184                   | T_LCURLY statement_list T_RCURLY
  185                   | T_LCURLY declaration_list T_RCURLY
  186                   | T_LCURLY declaration_list statement_list T_RCURLY

  187 declaration_list: declaration
  188                 | declaration_list declaration

  189 statement_list: statement
  190               | statement_list statement

  191 expression_statement: T_SEMICOLON
  192                     | expression T_SEMICOLON

  193 selection_statement: T_IF T_LBRACKET expression T_RBRACKET statement
  194                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement
  195                    | T_SWITCH T_LBRACKET expression T_RBRACKET statement

  196 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement
  197                    | T_DO statement T_WHILE T_LBRACKET expression T_RBRACKET T_SEMICOLON
  198                    | T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement
  199                    | T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

  200 jump_statement: T_GOTO T_IDENTIFIER T_SEMICOLON
  201               | T_CONTINUE T_SEMICOLON
  202               | T_BREAK T_SEMICOLON
  203               | T_RETURN T_SEMICOLON
  204               | T_RETURN expression T_SEMICOLON

  205 translation_unit: external_declaration
  206                 | translation_unit external_declaration

  207 external_declaration: function_definition
  208                     | declaration

  209 function_definition: declaration_specifiers declarator declaration_list compound_statement
  210                    | declaration_specifiers declarator compound_statement
  211                    | declarator declaration_list compound_statement
  212                    | declarator compound_statement


State 41 conflicts: 4 reduce/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: primary_expression

    2 primary_expression: T_IDENTIFIER
    3                   | T_CONST
    4                   | T_STRING_LITERAL
    5                   | T_LBRACKET expression T_RBRACKET

    6 postfix_expression: primary_expression
    7                   | postfix_expression T_LSQRBRACKET expression T_RSQRBRACKET
    8                   | postfix_expression T_LBRACKET T_RBRACKET
    9                   | postfix_expression T_LBRACKET argument_expression_list T_RBRACKET
   10                   | postfix_expression T_FULLSTOP T_IDENTIFIER
   11                   | postfix_expression PTR_OP T_IDENTIFIER
   12                   | postfix_expression T_PLUS_PLUS
   13                   | postfix_expression T_MINUS_MINUS

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list T_COMMA assignment_expression

   16 unary_expression: postfix_expression
   17                 | T_PLUS_PLUS unary_expression
   18                 | T_MINUS_MINUS unary_expression
   19                 | unary_operator cast_expression
   20                 | SIZEOF unary_expression
   21                 | SIZEOF T_LBRACKET type_name T_RBRACKET

   22 unary_operator: T_AMPERSAND
   23               | T_STAR
   24               | T_PLUS
   25               | T_MINUS
   26               | T_TILDE
   27               | T_EXCLAMATION

   28 cast_expression: unary_expression
   29                | T_LBRACKET type_name T_RBRACKET cast_expression

   30 multiplicative_expression: cast_expression
   31                          | multiplicative_expression T_STAR cast_expression
   32                          | multiplicative_expression T_SLASH cast_expression
   33                          | multiplicative_expression T_PERCENT cast_expression

   34 additive_expression: multiplicative_expression
   35                    | additive_expression T_PLUS multiplicative_expression
   36                    | additive_expression T_MINUS multiplicative_expression

   37 shift_expression: additive_expression
   38                 | shift_expression T_LEFT_OP additive_expression
   39                 | shift_expression T_RIGHT_OP additive_expression

   40 relational_expression: shift_expression
   41                      | relational_expression T_LESSTHAN shift_expression
   42                      | relational_expression T_GREATERTHAN shift_expression
   43                      | relational_expression T_LE_OP shift_expression
   44                      | relational_expression T_GE_OP shift_expression

   45 equality_expression: relational_expression
   46                    | equality_expression T_EQ_OP relational_expression
   47                    | equality_expression T_NE_OP relational_expression

   48 and_expression: equality_expression
   49               | and_expression T_AMPERSAND equality_expression

   50 exclusive_or_expression: and_expression
   51                        | exclusive_or_expression T_CARET and_expression

   52 inclusive_or_expression: exclusive_or_expression
   53                        | inclusive_or_expression T_LINE exclusive_or_expression

   54 logical_and_expression: inclusive_or_expression
   55                       | logical_and_expression AND_OP inclusive_or_expression

   56 logical_or_expression: logical_and_expression
   57                      | logical_or_expression OR_OP logical_and_expression

   58 conditional_expression: logical_or_expression
   59                       | logical_or_expression T_QUESTIONMARK expression T_COLON conditional_expression

   60 assignment_expression: conditional_expression
   61                      | unary_expression assignment_operator assignment_expression

   62 assignment_operator: T_ASSIGN
   63                    | T_MUL_ASSIGN
   64                    | T_DIV_ASSIGN
   65                    | T_MOD_ASSIGN
   66                    | T_ADD_ASSIGN
   67                    | T_SUB_ASSIGN
   68                    | T_LEFT_ASSIGN
   69                    | T_RIGHT_ASSIGN
   70                    | T_AND_ASSIGN
   71                    | T_XOR_ASSIGN
   72                    | T_OR_ASSIGN

   73 expression: assignment_expression
   74           | expression T_COMMA assignment_expression

   75 constant_expression: conditional_expression

   76 declaration_specifiers: storage_class_specifier
   77                       | storage_class_specifier declaration_specifiers
   78                       | type_specifier
   79                       | type_specifier declaration_specifiers
   80                       | type_qualifier
   81                       | type_qualifier declaration_specifiers

   82 storage_class_specifier: T_TYPEDEF
   83                        | T_EXTERN
   84                        | T_STATIC
   85                        | T_AUTO
   86                        | T_REGISTER

   87 type_specifier: T_VOID
   88               | T_CHAR
   89               | T_SHORT
   90               | T_INT
   91               | T_LONG
   92               | T_FLOAT
   93               | T_DOUBLE
   94               | T_SIGNED
   95               | T_UNSIGNED
   96               | struct_or_union_specifier
   97               | enum_specifier
   98               | T_TYPE_NAME

   99 struct_or_union_specifier: struct_or_union T_IDENTIFIER T_LCURLY struct_declaration_list T_RCURLY
  100                          | struct_or_union T_LCURLY struct_declaration_list T_RCURLY
  101                          | struct_or_union T_IDENTIFIER

  102 struct_or_union: T_STRUCT
  103                | T_UNION

  104 struct_declaration_list: struct_declaration
  105                        | struct_declaration_list struct_declaration

  106 struct_declaration: specifier_qualifier_list struct_declarator_list T_SEMICOLON

  107 specifier_qualifier_list: type_specifier specifier_qualifier_list
  108                         | type_specifier
  109                         | type_qualifier specifier_qualifier_list
  110                         | type_qualifier

  111 struct_declarator_list: struct_declarator
  112                       | struct_declarator_list T_COMMA struct_declarator

  113 struct_declarator: declarator
  114                  | T_COLON constant_expression
  115                  | declarator T_COLON constant_expression

  116 enum_specifier: T_ENUM T_LCURLY enumerator_list T_RCURLY
  117               | T_ENUM T_IDENTIFIER T_LCURLY enumerator_list T_RCURLY
  118               | T_ENUM T_IDENTIFIER

  119 enumerator_list: enumerator
  120                | enumerator_list T_COMMA enumerator

  121 enumerator: T_IDENTIFIER
  122           | T_IDENTIFIER T_ASSIGN constant_expression

  123 type_qualifier: T_CONST
  124               | T_VOLATILE

  125 declarator: pointer direct_declarator
  126           | direct_declarator

  127 direct_declarator: T_IDENTIFIER
  128                  | T_LBRACKET declarator T_RBRACKET
  129                  | direct_declarator T_LSQRBRACKET constant_expression T_RSQRBRACKET
  130                  | direct_declarator T_LSQRBRACKET T_RSQRBRACKET
  131                  | direct_declarator T_LBRACKET parameter_type_list T_RBRACKET
  132                  | direct_declarator T_LBRACKET identifier_list T_RBRACKET
  133                  | direct_declarator T_LBRACKET T_RBRACKET

  134 pointer: T_STAR
  135        | T_STAR type_qualifier_list
  136        | T_STAR pointer
  137        | T_STAR type_qualifier_list pointer

  138 type_qualifier_list: type_qualifier
  139                    | type_qualifier_list type_qualifier

  140 parameter_type_list: parameter_list
  141                    | parameter_list T_COMMA ELLIPSIS

  142 parameter_list: parameter_declaration
  143               | parameter_list T_COMMA parameter_declaration

  144 parameter_declaration: declaration_specifiers declarator
  145                      | declaration_specifiers abstract_declarator
  146                      | declaration_specifiers

  147 identifier_list: T_IDENTIFIER
  148                | identifier_list T_COMMA T_IDENTIFIER

  149 type_name: specifier_qualifier_list
  150          | specifier_qualifier_list abstract_declarator

  151 abstract_declarator: pointer
  152                    | direct_abstract_declarator
  153                    | pointer direct_abstract_declarator

  154 direct_abstract_declarator: T_LBRACKET abstract_declarator T_RBRACKET
  155                           | T_LSQRBRACKET T_RSQRBRACKET
  156                           | T_LSQRBRACKET constant_expression T_RSQRBRACKET
  157                           | direct_abstract_declarator T_LSQRBRACKET T_RSQRBRACKET
  158                           | direct_abstract_declarator T_LSQRBRACKET constant_expression T_RSQRBRACKET
  159                           | T_LBRACKET T_RBRACKET
  160                           | T_LBRACKET parameter_type_list T_RBRACKET
  161                           | direct_abstract_declarator T_LBRACKET T_RBRACKET
  162                           | direct_abstract_declarator T_LBRACKET parameter_type_list T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_IDENTIFIER (258) 2 10 11 99 101 117 118 121 122 127 147 148
CONSTANT (259)
STRING_LITERAL (260)
SIZEOF (261) 20 21
T_DO (262)
T_LSQRBRACKET (263) 7 129 130 155 156 157 158
PTR_OP (264) 11
T_PLUS_PLUS (265) 12 17
T_MINUS_MINUS (266) 13 18
LEFT_OP (267)
RIGHT_OP (268)
LE_OP (269)
GE_OP (270)
EQ_OP (271)
NE_OP (272)
AND_OP (273) 55
OR_OP (274) 57
MUL_ASSIGN (275)
DIV_ASSIGN (276)
MOD_ASSIGN (277)
ADD_ASSIGN (278)
SUB_ASSIGN (279)
LEFT_ASSIGN (280)
RIGHT_ASSIGN (281)
AND_ASSIGN (282)
XOR_ASSIGN (283)
OR_ASSIGN (284)
TYPE_NAME (285)
T_ADD_ASSIGN (286) 66
T_AMPERSAND (287) 22 49
T_AND_ASSIGN (288) 70
T_ASSIGN (289) 62 122
T_AUTO (290) 85
T_BREAK (291)
T_CARET (292) 51
T_CASE (293)
T_CHAR (294) 88
T_COLON (295) 59 114 115
T_COMMA (296) 15 74 112 120 141 143 148
T_CONST (297) 3 123
T_CONTINUE (298)
T_DEFAULT (299)
T_DIV_ASSIGN (300) 64
T_SEMICOLON (301) 106
T_DOUBLE (302) 93
T_EQ_OP (303) 46
T_EXCLAMATION (304) 27
T_EXTERN (305) 83
T_FLOAT (306) 92
T_FULLSTOP (307) 10
T_GE_OP (308) 44
T_GOTO (309)
T_GREATERTHAN (310) 42
T_LESSTHAN (311) 41
T_INT (312) 90
T_LBRACKET (313) 5 8 9 21 29 128 131 132 133 154 159 160 161 162
T_LCURLY (314) 99 100 116 117
T_LEFT_ASSIGN (315) 68
T_LEFT_OP (316) 38
T_LE_OP (317) 43
T_LINE (318) 53
T_LONG (319) 91
T_MINUS (320) 25 36
T_MOD_ASSIGN (321) 65
T_MUL_ASSIGN (322) 63
T_NE_OP (323) 47
T_OR_ASSIGN (324) 72
T_PERCENT (325) 33
T_PLUS (326) 24 35
T_QUESTIONMARK (327) 59
T_RBRACKET (328) 5 8 9 21 29 128 131 132 133 154 159 160 161 162
T_RCURLY (329) 99 100 116 117
T_REGISTER (330) 86
T_RETURN (331)
T_RIGHT_ASSIGN (332) 69
T_RIGHT_OP (333) 39
T_RSQRBRACKET (334) 7 129 130 155 156 157 158
T_SHORT (335) 89
T_SIGNED (336) 94
T_SLASH (337) 32
T_STAR (338) 23 31 134 135 136 137
T_STATIC (339) 84
T_STRING_LITERAL (340) 4
T_STRUCT (341) 102
T_SUB_ASSIGN (342) 67
T_SWITCH (343)
T_TILDE (344) 26
T_TYPEDEF (345) 82
T_TYPE_NAME (346) 98
T_UNION (347) 103
T_UNSIGNED (348) 95
T_VOID (349) 87
T_VOLATILE (350) 124
T_XOR_ASSIGN (351) 71
TYPEDEF (352)
EXTERN (353)
STATIC (354)
AUTO (355)
REGISTER (356)
CHAR (357)
SHORT (358)
INT (359)
LONG (360)
SIGNED (361)
UNSIGNED (362)
FLOAT (363)
DOUBLE (364)
CONST (365)
VOLATILE (366)
VOID (367)
STRUCT (368)
UNION (369)
T_ENUM (370) 116 117 118
ELLIPSIS (371) 141
CASE (372)
DEFAULT (373)
T_IF (374)
T_ELSE (375)
SWITCH (376)
T_WHILE (377)
DO (378)
T_FOR (379)
GOTO (380)
CONTINUE (381)
BREAK (382)
RETURN (383)


Nonterminals, with rules where they appear

$accept (129)
    on left: 0
ROOT (130)
    on left: 1, on right: 0
primary_expression (131)
    on left: 2 3 4 5, on right: 1 6
postfix_expression (132)
    on left: 6 7 8 9 10 11 12 13, on right: 7 8 9 10 11 12 13 16
argument_expression_list (133)
    on left: 14 15, on right: 9 15
unary_expression (134)
    on left: 16 17 18 19 20 21, on right: 17 18 20 28 61
unary_operator (135)
    on left: 22 23 24 25 26 27, on right: 19
cast_expression (136)
    on left: 28 29, on right: 19 29 30 31 32 33
multiplicative_expression (137)
    on left: 30 31 32 33, on right: 31 32 33 34 35 36
additive_expression (138)
    on left: 34 35 36, on right: 35 36 37 38 39
shift_expression (139)
    on left: 37 38 39, on right: 38 39 40 41 42 43 44
relational_expression (140)
    on left: 40 41 42 43 44, on right: 41 42 43 44 45 46 47
equality_expression (141)
    on left: 45 46 47, on right: 46 47 48 49
and_expression (142)
    on left: 48 49, on right: 49 50 51
exclusive_or_expression (143)
    on left: 50 51, on right: 51 52 53
inclusive_or_expression (144)
    on left: 52 53, on right: 53 54 55
logical_and_expression (145)
    on left: 54 55, on right: 55 56 57
logical_or_expression (146)
    on left: 56 57, on right: 57 58 59
conditional_expression (147)
    on left: 58 59, on right: 59 60 75
assignment_expression (148)
    on left: 60 61, on right: 14 15 61 73 74
assignment_operator (149)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 61
expression (150)
    on left: 73 74, on right: 5 7 59 74
constant_expression (151)
    on left: 75, on right: 114 115 122 129 156 158
declaration_specifiers (152)
    on left: 76 77 78 79 80 81, on right: 77 79 81 144 145 146
storage_class_specifier (153)
    on left: 82 83 84 85 86, on right: 76 77
type_specifier (154)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98, on right: 78 79 107
    108
struct_or_union_specifier (155)
    on left: 99 100 101, on right: 96
struct_or_union (156)
    on left: 102 103, on right: 99 100 101
struct_declaration_list (157)
    on left: 104 105, on right: 99 100 105
struct_declaration (158)
    on left: 106, on right: 104 105
specifier_qualifier_list (159)
    on left: 107 108 109 110, on right: 106 107 109 149 150
struct_declarator_list (160)
    on left: 111 112, on right: 106 112
struct_declarator (161)
    on left: 113 114 115, on right: 111 112
enum_specifier (162)
    on left: 116 117 118, on right: 97
enumerator_list (163)
    on left: 119 120, on right: 116 117 120
enumerator (164)
    on left: 121 122, on right: 119 120
type_qualifier (165)
    on left: 123 124, on right: 80 81 109 110 138 139
declarator (166)
    on left: 125 126, on right: 113 115 128 144
direct_declarator (167)
    on left: 127 128 129 130 131 132 133, on right: 125 126 129 130
    131 132 133
pointer (168)
    on left: 134 135 136 137, on right: 125 136 137 151 153
type_qualifier_list (169)
    on left: 138 139, on right: 135 137 139
parameter_type_list (170)
    on left: 140 141, on right: 131 160 162
parameter_list (171)
    on left: 142 143, on right: 140 141 143
parameter_declaration (172)
    on left: 144 145 146, on right: 142 143
identifier_list (173)
    on left: 147 148, on right: 132 148
type_name (174)
    on left: 149 150, on right: 21 29
abstract_declarator (175)
    on left: 151 152 153, on right: 145 150 154
direct_abstract_declarator (176)
    on left: 154 155 156 157 158 159 160 161 162, on right: 152 153
    157 158 161 162


State 0

    0 $accept: . ROOT $end

    T_IDENTIFIER      shift, and go to state 1
    T_CONST           shift, and go to state 2
    T_LBRACKET        shift, and go to state 3
    T_STRING_LITERAL  shift, and go to state 4

    ROOT                go to state 5
    primary_expression  go to state 6


State 1

    2 primary_expression: T_IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


State 2

    3 primary_expression: T_CONST .

    $default  reduce using rule 3 (primary_expression)


State 3

    5 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34


State 4

    4 primary_expression: T_STRING_LITERAL .

    $default  reduce using rule 4 (primary_expression)


State 5

    0 $accept: ROOT . $end

    $end  shift, and go to state 35


State 6

    1 ROOT: primary_expression .

    $default  reduce using rule 1 (ROOT)


State 7

   20 unary_expression: SIZEOF . unary_expression
   21                 | SIZEOF . T_LBRACKET type_name T_RBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 36
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 37
    unary_operator      go to state 20


State 8

   17 unary_expression: T_PLUS_PLUS . unary_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 3
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 38
    unary_operator      go to state 20


State 9

   18 unary_expression: T_MINUS_MINUS . unary_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 3
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 39
    unary_operator      go to state 20


State 10

   22 unary_operator: T_AMPERSAND .

    $default  reduce using rule 22 (unary_operator)


State 11

   27 unary_operator: T_EXCLAMATION .

    $default  reduce using rule 27 (unary_operator)


State 12

    5 primary_expression: T_LBRACKET . expression T_RBRACKET
   29 cast_expression: T_LBRACKET . type_name T_RBRACKET cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CHAR            shift, and go to state 40
    T_CONST           shift, and go to state 41
    T_DOUBLE          shift, and go to state 42
    T_EXCLAMATION     shift, and go to state 11
    T_FLOAT           shift, and go to state 43
    T_INT             shift, and go to state 44
    T_LBRACKET        shift, and go to state 12
    T_LONG            shift, and go to state 45
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_SHORT           shift, and go to state 46
    T_SIGNED          shift, and go to state 47
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_STRUCT          shift, and go to state 48
    T_TILDE           shift, and go to state 16
    T_TYPE_NAME       shift, and go to state 49
    T_UNION           shift, and go to state 50
    T_UNSIGNED        shift, and go to state 51
    T_VOID            shift, and go to state 52
    T_VOLATILE        shift, and go to state 53
    T_ENUM            shift, and go to state 54

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    specifier_qualifier_list   go to state 58
    enum_specifier             go to state 59
    type_qualifier             go to state 60
    type_name                  go to state 61


State 13

   25 unary_operator: T_MINUS .

    $default  reduce using rule 25 (unary_operator)


State 14

   24 unary_operator: T_PLUS .

    $default  reduce using rule 24 (unary_operator)


State 15

   23 unary_operator: T_STAR .

    $default  reduce using rule 23 (unary_operator)


State 16

   26 unary_operator: T_TILDE .

    $default  reduce using rule 26 (unary_operator)


State 17

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


State 18

    7 postfix_expression: postfix_expression . T_LSQRBRACKET expression T_RSQRBRACKET
    8                   | postfix_expression . T_LBRACKET T_RBRACKET
    9                   | postfix_expression . T_LBRACKET argument_expression_list T_RBRACKET
   10                   | postfix_expression . T_FULLSTOP T_IDENTIFIER
   11                   | postfix_expression . PTR_OP T_IDENTIFIER
   12                   | postfix_expression . T_PLUS_PLUS
   13                   | postfix_expression . T_MINUS_MINUS
   16 unary_expression: postfix_expression .

    T_LSQRBRACKET  shift, and go to state 62
    PTR_OP         shift, and go to state 63
    T_PLUS_PLUS    shift, and go to state 64
    T_MINUS_MINUS  shift, and go to state 65
    T_FULLSTOP     shift, and go to state 66
    T_LBRACKET     shift, and go to state 67

    $default  reduce using rule 16 (unary_expression)


State 19

   28 cast_expression: unary_expression .
   61 assignment_expression: unary_expression . assignment_operator assignment_expression

    T_ADD_ASSIGN    shift, and go to state 68
    T_AND_ASSIGN    shift, and go to state 69
    T_ASSIGN        shift, and go to state 70
    T_DIV_ASSIGN    shift, and go to state 71
    T_LEFT_ASSIGN   shift, and go to state 72
    T_MOD_ASSIGN    shift, and go to state 73
    T_MUL_ASSIGN    shift, and go to state 74
    T_OR_ASSIGN     shift, and go to state 75
    T_RIGHT_ASSIGN  shift, and go to state 76
    T_SUB_ASSIGN    shift, and go to state 77
    T_XOR_ASSIGN    shift, and go to state 78

    $default  reduce using rule 28 (cast_expression)

    assignment_operator  go to state 79


State 20

   19 unary_expression: unary_operator . cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 80
    unary_operator      go to state 20
    cast_expression     go to state 81


State 21

   30 multiplicative_expression: cast_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 22

   31 multiplicative_expression: multiplicative_expression . T_STAR cast_expression
   32                          | multiplicative_expression . T_SLASH cast_expression
   33                          | multiplicative_expression . T_PERCENT cast_expression
   34 additive_expression: multiplicative_expression .

    T_PERCENT  shift, and go to state 82
    T_SLASH    shift, and go to state 83
    T_STAR     shift, and go to state 84

    $default  reduce using rule 34 (additive_expression)


State 23

   35 additive_expression: additive_expression . T_PLUS multiplicative_expression
   36                    | additive_expression . T_MINUS multiplicative_expression
   37 shift_expression: additive_expression .

    T_MINUS  shift, and go to state 85
    T_PLUS   shift, and go to state 86

    $default  reduce using rule 37 (shift_expression)


State 24

   38 shift_expression: shift_expression . T_LEFT_OP additive_expression
   39                 | shift_expression . T_RIGHT_OP additive_expression
   40 relational_expression: shift_expression .

    T_LEFT_OP   shift, and go to state 87
    T_RIGHT_OP  shift, and go to state 88

    $default  reduce using rule 40 (relational_expression)


State 25

   41 relational_expression: relational_expression . T_LESSTHAN shift_expression
   42                      | relational_expression . T_GREATERTHAN shift_expression
   43                      | relational_expression . T_LE_OP shift_expression
   44                      | relational_expression . T_GE_OP shift_expression
   45 equality_expression: relational_expression .

    T_GE_OP        shift, and go to state 89
    T_GREATERTHAN  shift, and go to state 90
    T_LESSTHAN     shift, and go to state 91
    T_LE_OP        shift, and go to state 92

    $default  reduce using rule 45 (equality_expression)


State 26

   46 equality_expression: equality_expression . T_EQ_OP relational_expression
   47                    | equality_expression . T_NE_OP relational_expression
   48 and_expression: equality_expression .

    T_EQ_OP  shift, and go to state 93
    T_NE_OP  shift, and go to state 94

    $default  reduce using rule 48 (and_expression)


State 27

   49 and_expression: and_expression . T_AMPERSAND equality_expression
   50 exclusive_or_expression: and_expression .

    T_AMPERSAND  shift, and go to state 95

    $default  reduce using rule 50 (exclusive_or_expression)


State 28

   51 exclusive_or_expression: exclusive_or_expression . T_CARET and_expression
   52 inclusive_or_expression: exclusive_or_expression .

    T_CARET  shift, and go to state 96

    $default  reduce using rule 52 (inclusive_or_expression)


State 29

   53 inclusive_or_expression: inclusive_or_expression . T_LINE exclusive_or_expression
   54 logical_and_expression: inclusive_or_expression .

    T_LINE  shift, and go to state 97

    $default  reduce using rule 54 (logical_and_expression)


State 30

   55 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   56 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 98

    $default  reduce using rule 56 (logical_or_expression)


State 31

   57 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   58 conditional_expression: logical_or_expression .
   59                       | logical_or_expression . T_QUESTIONMARK expression T_COLON conditional_expression

    OR_OP           shift, and go to state 99
    T_QUESTIONMARK  shift, and go to state 100

    $default  reduce using rule 58 (conditional_expression)


State 32

   60 assignment_expression: conditional_expression .

    $default  reduce using rule 60 (assignment_expression)


State 33

   73 expression: assignment_expression .

    $default  reduce using rule 73 (expression)


State 34

    5 primary_expression: T_LBRACKET expression . T_RBRACKET
   74 expression: expression . T_COMMA assignment_expression

    T_COMMA     shift, and go to state 101
    T_RBRACKET  shift, and go to state 102


State 35

    0 $accept: ROOT $end .

    $default  accept


State 36

    5 primary_expression: T_LBRACKET . expression T_RBRACKET
   21 unary_expression: SIZEOF T_LBRACKET . type_name T_RBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CHAR            shift, and go to state 40
    T_CONST           shift, and go to state 41
    T_DOUBLE          shift, and go to state 42
    T_EXCLAMATION     shift, and go to state 11
    T_FLOAT           shift, and go to state 43
    T_INT             shift, and go to state 44
    T_LBRACKET        shift, and go to state 12
    T_LONG            shift, and go to state 45
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_SHORT           shift, and go to state 46
    T_SIGNED          shift, and go to state 47
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_STRUCT          shift, and go to state 48
    T_TILDE           shift, and go to state 16
    T_TYPE_NAME       shift, and go to state 49
    T_UNION           shift, and go to state 50
    T_UNSIGNED        shift, and go to state 51
    T_VOID            shift, and go to state 52
    T_VOLATILE        shift, and go to state 53
    T_ENUM            shift, and go to state 54

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    specifier_qualifier_list   go to state 58
    enum_specifier             go to state 59
    type_qualifier             go to state 60
    type_name                  go to state 103


State 37

   20 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 38

   17 unary_expression: T_PLUS_PLUS unary_expression .

    $default  reduce using rule 17 (unary_expression)


State 39

   18 unary_expression: T_MINUS_MINUS unary_expression .

    $default  reduce using rule 18 (unary_expression)


State 40

   88 type_specifier: T_CHAR .

    $default  reduce using rule 88 (type_specifier)


State 41

    3 primary_expression: T_CONST .
  123 type_qualifier: T_CONST .

    T_LSQRBRACKET  reduce using rule 3 (primary_expression)
    T_LSQRBRACKET  [reduce using rule 123 (type_qualifier)]
    T_CHAR         reduce using rule 123 (type_qualifier)
    T_CONST        reduce using rule 123 (type_qualifier)
    T_DOUBLE       reduce using rule 123 (type_qualifier)
    T_FLOAT        reduce using rule 123 (type_qualifier)
    T_INT          reduce using rule 123 (type_qualifier)
    T_LBRACKET     reduce using rule 3 (primary_expression)
    T_LBRACKET     [reduce using rule 123 (type_qualifier)]
    T_LONG         reduce using rule 123 (type_qualifier)
    T_RBRACKET     reduce using rule 3 (primary_expression)
    T_RBRACKET     [reduce using rule 123 (type_qualifier)]
    T_SHORT        reduce using rule 123 (type_qualifier)
    T_SIGNED       reduce using rule 123 (type_qualifier)
    T_STAR         reduce using rule 3 (primary_expression)
    T_STAR         [reduce using rule 123 (type_qualifier)]
    T_STRUCT       reduce using rule 123 (type_qualifier)
    T_TYPE_NAME    reduce using rule 123 (type_qualifier)
    T_UNION        reduce using rule 123 (type_qualifier)
    T_UNSIGNED     reduce using rule 123 (type_qualifier)
    T_VOID         reduce using rule 123 (type_qualifier)
    T_VOLATILE     reduce using rule 123 (type_qualifier)
    T_ENUM         reduce using rule 123 (type_qualifier)
    $default       reduce using rule 3 (primary_expression)


State 42

   93 type_specifier: T_DOUBLE .

    $default  reduce using rule 93 (type_specifier)


State 43

   92 type_specifier: T_FLOAT .

    $default  reduce using rule 92 (type_specifier)


State 44

   90 type_specifier: T_INT .

    $default  reduce using rule 90 (type_specifier)


State 45

   91 type_specifier: T_LONG .

    $default  reduce using rule 91 (type_specifier)


State 46

   89 type_specifier: T_SHORT .

    $default  reduce using rule 89 (type_specifier)


State 47

   94 type_specifier: T_SIGNED .

    $default  reduce using rule 94 (type_specifier)


State 48

  102 struct_or_union: T_STRUCT .

    $default  reduce using rule 102 (struct_or_union)


State 49

   98 type_specifier: T_TYPE_NAME .

    $default  reduce using rule 98 (type_specifier)


State 50

  103 struct_or_union: T_UNION .

    $default  reduce using rule 103 (struct_or_union)


State 51

   95 type_specifier: T_UNSIGNED .

    $default  reduce using rule 95 (type_specifier)


State 52

   87 type_specifier: T_VOID .

    $default  reduce using rule 87 (type_specifier)


State 53

  124 type_qualifier: T_VOLATILE .

    $default  reduce using rule 124 (type_qualifier)


State 54

  116 enum_specifier: T_ENUM . T_LCURLY enumerator_list T_RCURLY
  117               | T_ENUM . T_IDENTIFIER T_LCURLY enumerator_list T_RCURLY
  118               | T_ENUM . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 104
    T_LCURLY      shift, and go to state 105


State 55

  107 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  108                         | type_specifier .

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    $default  reduce using rule 108 (specifier_qualifier_list)

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    specifier_qualifier_list   go to state 107
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 56

   96 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 96 (type_specifier)


State 57

   99 struct_or_union_specifier: struct_or_union . T_IDENTIFIER T_LCURLY struct_declaration_list T_RCURLY
  100                          | struct_or_union . T_LCURLY struct_declaration_list T_RCURLY
  101                          | struct_or_union . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 108
    T_LCURLY      shift, and go to state 109


State 58

  149 type_name: specifier_qualifier_list .
  150          | specifier_qualifier_list . abstract_declarator

    T_LSQRBRACKET  shift, and go to state 110
    T_LBRACKET     shift, and go to state 111
    T_STAR         shift, and go to state 112

    $default  reduce using rule 149 (type_name)

    pointer                     go to state 113
    abstract_declarator         go to state 114
    direct_abstract_declarator  go to state 115


State 59

   97 type_specifier: enum_specifier .

    $default  reduce using rule 97 (type_specifier)


State 60

  109 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  110                         | type_qualifier .

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    $default  reduce using rule 110 (specifier_qualifier_list)

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    specifier_qualifier_list   go to state 116
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 61

   29 cast_expression: T_LBRACKET type_name . T_RBRACKET cast_expression

    T_RBRACKET  shift, and go to state 117


State 62

    7 postfix_expression: postfix_expression T_LSQRBRACKET . expression T_RSQRBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 118


State 63

   11 postfix_expression: postfix_expression PTR_OP . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 119


State 64

   12 postfix_expression: postfix_expression T_PLUS_PLUS .

    $default  reduce using rule 12 (postfix_expression)


State 65

   13 postfix_expression: postfix_expression T_MINUS_MINUS .

    $default  reduce using rule 13 (postfix_expression)


State 66

   10 postfix_expression: postfix_expression T_FULLSTOP . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 120


State 67

    8 postfix_expression: postfix_expression T_LBRACKET . T_RBRACKET
    9                   | postfix_expression T_LBRACKET . argument_expression_list T_RBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_RBRACKET        shift, and go to state 121
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    argument_expression_list   go to state 122
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 123


State 68

   66 assignment_operator: T_ADD_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 69

   70 assignment_operator: T_AND_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 70

   62 assignment_operator: T_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


State 71

   64 assignment_operator: T_DIV_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


State 72

   68 assignment_operator: T_LEFT_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 73

   65 assignment_operator: T_MOD_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


State 74

   63 assignment_operator: T_MUL_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


State 75

   72 assignment_operator: T_OR_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 76

   69 assignment_operator: T_RIGHT_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 77

   67 assignment_operator: T_SUB_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


State 78

   71 assignment_operator: T_XOR_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 79

   61 assignment_expression: unary_expression assignment_operator . assignment_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 124


State 80

   28 cast_expression: unary_expression .

    $default  reduce using rule 28 (cast_expression)


State 81

   19 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 19 (unary_expression)


State 82

   33 multiplicative_expression: multiplicative_expression T_PERCENT . cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 80
    unary_operator      go to state 20
    cast_expression     go to state 125


State 83

   32 multiplicative_expression: multiplicative_expression T_SLASH . cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 80
    unary_operator      go to state 20
    cast_expression     go to state 126


State 84

   31 multiplicative_expression: multiplicative_expression T_STAR . cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 80
    unary_operator      go to state 20
    cast_expression     go to state 127


State 85

   36 additive_expression: additive_expression T_MINUS . multiplicative_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 128


State 86

   35 additive_expression: additive_expression T_PLUS . multiplicative_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 129


State 87

   38 shift_expression: shift_expression T_LEFT_OP . additive_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 130


State 88

   39 shift_expression: shift_expression T_RIGHT_OP . additive_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 131


State 89

   44 relational_expression: relational_expression T_GE_OP . shift_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 132


State 90

   42 relational_expression: relational_expression T_GREATERTHAN . shift_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 133


State 91

   41 relational_expression: relational_expression T_LESSTHAN . shift_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 134


State 92

   43 relational_expression: relational_expression T_LE_OP . shift_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 135


State 93

   46 equality_expression: equality_expression T_EQ_OP . relational_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 136


State 94

   47 equality_expression: equality_expression T_NE_OP . relational_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 137


State 95

   49 and_expression: and_expression T_AMPERSAND . equality_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 138


State 96

   51 exclusive_or_expression: exclusive_or_expression T_CARET . and_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 139


State 97

   53 inclusive_or_expression: inclusive_or_expression T_LINE . exclusive_or_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 140


State 98

   55 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 141


State 99

   57 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 142


State 100

   59 conditional_expression: logical_or_expression T_QUESTIONMARK . expression T_COLON conditional_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 143


State 101

   74 expression: expression T_COMMA . assignment_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 144


State 102

    5 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 5 (primary_expression)


State 103

   21 unary_expression: SIZEOF T_LBRACKET type_name . T_RBRACKET

    T_RBRACKET  shift, and go to state 145


State 104

  117 enum_specifier: T_ENUM T_IDENTIFIER . T_LCURLY enumerator_list T_RCURLY
  118               | T_ENUM T_IDENTIFIER .

    T_LCURLY  shift, and go to state 146

    $default  reduce using rule 118 (enum_specifier)


State 105

  116 enum_specifier: T_ENUM T_LCURLY . enumerator_list T_RCURLY

    T_IDENTIFIER  shift, and go to state 147

    enumerator_list  go to state 148
    enumerator       go to state 149


State 106

  123 type_qualifier: T_CONST .

    $default  reduce using rule 123 (type_qualifier)


State 107

  107 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 107 (specifier_qualifier_list)


State 108

   99 struct_or_union_specifier: struct_or_union T_IDENTIFIER . T_LCURLY struct_declaration_list T_RCURLY
  101                          | struct_or_union T_IDENTIFIER .

    T_LCURLY  shift, and go to state 150

    $default  reduce using rule 101 (struct_or_union_specifier)


State 109

  100 struct_or_union_specifier: struct_or_union T_LCURLY . struct_declaration_list T_RCURLY

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    struct_declaration_list    go to state 151
    struct_declaration         go to state 152
    specifier_qualifier_list   go to state 153
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 110

  155 direct_abstract_declarator: T_LSQRBRACKET . T_RSQRBRACKET
  156                           | T_LSQRBRACKET . constant_expression T_RSQRBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_RSQRBRACKET     shift, and go to state 154
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 156


State 111

  154 direct_abstract_declarator: T_LBRACKET . abstract_declarator T_RBRACKET
  159                           | T_LBRACKET . T_RBRACKET
  160                           | T_LBRACKET . parameter_type_list T_RBRACKET

    T_LSQRBRACKET  shift, and go to state 110
    T_AUTO         shift, and go to state 157
    T_CHAR         shift, and go to state 40
    T_CONST        shift, and go to state 106
    T_DOUBLE       shift, and go to state 42
    T_EXTERN       shift, and go to state 158
    T_FLOAT        shift, and go to state 43
    T_INT          shift, and go to state 44
    T_LBRACKET     shift, and go to state 111
    T_LONG         shift, and go to state 45
    T_RBRACKET     shift, and go to state 159
    T_REGISTER     shift, and go to state 160
    T_SHORT        shift, and go to state 46
    T_SIGNED       shift, and go to state 47
    T_STAR         shift, and go to state 112
    T_STATIC       shift, and go to state 161
    T_STRUCT       shift, and go to state 48
    T_TYPEDEF      shift, and go to state 162
    T_TYPE_NAME    shift, and go to state 49
    T_UNION        shift, and go to state 50
    T_UNSIGNED     shift, and go to state 51
    T_VOID         shift, and go to state 52
    T_VOLATILE     shift, and go to state 53
    T_ENUM         shift, and go to state 54

    declaration_specifiers      go to state 163
    storage_class_specifier     go to state 164
    type_specifier              go to state 165
    struct_or_union_specifier   go to state 56
    struct_or_union             go to state 57
    enum_specifier              go to state 59
    type_qualifier              go to state 166
    pointer                     go to state 113
    parameter_type_list         go to state 167
    parameter_list              go to state 168
    parameter_declaration       go to state 169
    abstract_declarator         go to state 170
    direct_abstract_declarator  go to state 115


State 112

  134 pointer: T_STAR .
  135        | T_STAR . type_qualifier_list
  136        | T_STAR . pointer
  137        | T_STAR . type_qualifier_list pointer

    T_CONST     shift, and go to state 106
    T_STAR      shift, and go to state 112
    T_VOLATILE  shift, and go to state 53

    $default  reduce using rule 134 (pointer)

    type_qualifier       go to state 171
    pointer              go to state 172
    type_qualifier_list  go to state 173


State 113

  151 abstract_declarator: pointer .
  153                    | pointer . direct_abstract_declarator

    T_LSQRBRACKET  shift, and go to state 110
    T_LBRACKET     shift, and go to state 111

    $default  reduce using rule 151 (abstract_declarator)

    direct_abstract_declarator  go to state 174


State 114

  150 type_name: specifier_qualifier_list abstract_declarator .

    $default  reduce using rule 150 (type_name)


State 115

  152 abstract_declarator: direct_abstract_declarator .
  157 direct_abstract_declarator: direct_abstract_declarator . T_LSQRBRACKET T_RSQRBRACKET
  158                           | direct_abstract_declarator . T_LSQRBRACKET constant_expression T_RSQRBRACKET
  161                           | direct_abstract_declarator . T_LBRACKET T_RBRACKET
  162                           | direct_abstract_declarator . T_LBRACKET parameter_type_list T_RBRACKET

    T_LSQRBRACKET  shift, and go to state 175
    T_LBRACKET     shift, and go to state 176

    $default  reduce using rule 152 (abstract_declarator)


State 116

  109 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 109 (specifier_qualifier_list)


State 117

   29 cast_expression: T_LBRACKET type_name T_RBRACKET . cast_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression  go to state 17
    postfix_expression  go to state 18
    unary_expression    go to state 80
    unary_operator      go to state 20
    cast_expression     go to state 177


State 118

    7 postfix_expression: postfix_expression T_LSQRBRACKET expression . T_RSQRBRACKET
   74 expression: expression . T_COMMA assignment_expression

    T_COMMA        shift, and go to state 101
    T_RSQRBRACKET  shift, and go to state 178


State 119

   11 postfix_expression: postfix_expression PTR_OP T_IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


State 120

   10 postfix_expression: postfix_expression T_FULLSTOP T_IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


State 121

    8 postfix_expression: postfix_expression T_LBRACKET T_RBRACKET .

    $default  reduce using rule 8 (postfix_expression)


State 122

    9 postfix_expression: postfix_expression T_LBRACKET argument_expression_list . T_RBRACKET
   15 argument_expression_list: argument_expression_list . T_COMMA assignment_expression

    T_COMMA     shift, and go to state 179
    T_RBRACKET  shift, and go to state 180


State 123

   14 argument_expression_list: assignment_expression .

    $default  reduce using rule 14 (argument_expression_list)


State 124

   61 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 61 (assignment_expression)


State 125

   33 multiplicative_expression: multiplicative_expression T_PERCENT cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 126

   32 multiplicative_expression: multiplicative_expression T_SLASH cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 127

   31 multiplicative_expression: multiplicative_expression T_STAR cast_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 128

   31 multiplicative_expression: multiplicative_expression . T_STAR cast_expression
   32                          | multiplicative_expression . T_SLASH cast_expression
   33                          | multiplicative_expression . T_PERCENT cast_expression
   36 additive_expression: additive_expression T_MINUS multiplicative_expression .

    T_PERCENT  shift, and go to state 82
    T_SLASH    shift, and go to state 83
    T_STAR     shift, and go to state 84

    $default  reduce using rule 36 (additive_expression)


State 129

   31 multiplicative_expression: multiplicative_expression . T_STAR cast_expression
   32                          | multiplicative_expression . T_SLASH cast_expression
   33                          | multiplicative_expression . T_PERCENT cast_expression
   35 additive_expression: additive_expression T_PLUS multiplicative_expression .

    T_PERCENT  shift, and go to state 82
    T_SLASH    shift, and go to state 83
    T_STAR     shift, and go to state 84

    $default  reduce using rule 35 (additive_expression)


State 130

   35 additive_expression: additive_expression . T_PLUS multiplicative_expression
   36                    | additive_expression . T_MINUS multiplicative_expression
   38 shift_expression: shift_expression T_LEFT_OP additive_expression .

    T_MINUS  shift, and go to state 85
    T_PLUS   shift, and go to state 86

    $default  reduce using rule 38 (shift_expression)


State 131

   35 additive_expression: additive_expression . T_PLUS multiplicative_expression
   36                    | additive_expression . T_MINUS multiplicative_expression
   39 shift_expression: shift_expression T_RIGHT_OP additive_expression .

    T_MINUS  shift, and go to state 85
    T_PLUS   shift, and go to state 86

    $default  reduce using rule 39 (shift_expression)


State 132

   38 shift_expression: shift_expression . T_LEFT_OP additive_expression
   39                 | shift_expression . T_RIGHT_OP additive_expression
   44 relational_expression: relational_expression T_GE_OP shift_expression .

    T_LEFT_OP   shift, and go to state 87
    T_RIGHT_OP  shift, and go to state 88

    $default  reduce using rule 44 (relational_expression)


State 133

   38 shift_expression: shift_expression . T_LEFT_OP additive_expression
   39                 | shift_expression . T_RIGHT_OP additive_expression
   42 relational_expression: relational_expression T_GREATERTHAN shift_expression .

    T_LEFT_OP   shift, and go to state 87
    T_RIGHT_OP  shift, and go to state 88

    $default  reduce using rule 42 (relational_expression)


State 134

   38 shift_expression: shift_expression . T_LEFT_OP additive_expression
   39                 | shift_expression . T_RIGHT_OP additive_expression
   41 relational_expression: relational_expression T_LESSTHAN shift_expression .

    T_LEFT_OP   shift, and go to state 87
    T_RIGHT_OP  shift, and go to state 88

    $default  reduce using rule 41 (relational_expression)


State 135

   38 shift_expression: shift_expression . T_LEFT_OP additive_expression
   39                 | shift_expression . T_RIGHT_OP additive_expression
   43 relational_expression: relational_expression T_LE_OP shift_expression .

    T_LEFT_OP   shift, and go to state 87
    T_RIGHT_OP  shift, and go to state 88

    $default  reduce using rule 43 (relational_expression)


State 136

   41 relational_expression: relational_expression . T_LESSTHAN shift_expression
   42                      | relational_expression . T_GREATERTHAN shift_expression
   43                      | relational_expression . T_LE_OP shift_expression
   44                      | relational_expression . T_GE_OP shift_expression
   46 equality_expression: equality_expression T_EQ_OP relational_expression .

    T_GE_OP        shift, and go to state 89
    T_GREATERTHAN  shift, and go to state 90
    T_LESSTHAN     shift, and go to state 91
    T_LE_OP        shift, and go to state 92

    $default  reduce using rule 46 (equality_expression)


State 137

   41 relational_expression: relational_expression . T_LESSTHAN shift_expression
   42                      | relational_expression . T_GREATERTHAN shift_expression
   43                      | relational_expression . T_LE_OP shift_expression
   44                      | relational_expression . T_GE_OP shift_expression
   47 equality_expression: equality_expression T_NE_OP relational_expression .

    T_GE_OP        shift, and go to state 89
    T_GREATERTHAN  shift, and go to state 90
    T_LESSTHAN     shift, and go to state 91
    T_LE_OP        shift, and go to state 92

    $default  reduce using rule 47 (equality_expression)


State 138

   46 equality_expression: equality_expression . T_EQ_OP relational_expression
   47                    | equality_expression . T_NE_OP relational_expression
   49 and_expression: and_expression T_AMPERSAND equality_expression .

    T_EQ_OP  shift, and go to state 93
    T_NE_OP  shift, and go to state 94

    $default  reduce using rule 49 (and_expression)


State 139

   49 and_expression: and_expression . T_AMPERSAND equality_expression
   51 exclusive_or_expression: exclusive_or_expression T_CARET and_expression .

    T_AMPERSAND  shift, and go to state 95

    $default  reduce using rule 51 (exclusive_or_expression)


State 140

   51 exclusive_or_expression: exclusive_or_expression . T_CARET and_expression
   53 inclusive_or_expression: inclusive_or_expression T_LINE exclusive_or_expression .

    T_CARET  shift, and go to state 96

    $default  reduce using rule 53 (inclusive_or_expression)


State 141

   53 inclusive_or_expression: inclusive_or_expression . T_LINE exclusive_or_expression
   55 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    T_LINE  shift, and go to state 97

    $default  reduce using rule 55 (logical_and_expression)


State 142

   55 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   57 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 98

    $default  reduce using rule 57 (logical_or_expression)


State 143

   59 conditional_expression: logical_or_expression T_QUESTIONMARK expression . T_COLON conditional_expression
   74 expression: expression . T_COMMA assignment_expression

    T_COLON  shift, and go to state 181
    T_COMMA  shift, and go to state 101


State 144

   74 expression: expression T_COMMA assignment_expression .

    $default  reduce using rule 74 (expression)


State 145

   21 unary_expression: SIZEOF T_LBRACKET type_name T_RBRACKET .

    $default  reduce using rule 21 (unary_expression)


State 146

  117 enum_specifier: T_ENUM T_IDENTIFIER T_LCURLY . enumerator_list T_RCURLY

    T_IDENTIFIER  shift, and go to state 147

    enumerator_list  go to state 182
    enumerator       go to state 149


State 147

  121 enumerator: T_IDENTIFIER .
  122           | T_IDENTIFIER . T_ASSIGN constant_expression

    T_ASSIGN  shift, and go to state 183

    $default  reduce using rule 121 (enumerator)


State 148

  116 enum_specifier: T_ENUM T_LCURLY enumerator_list . T_RCURLY
  120 enumerator_list: enumerator_list . T_COMMA enumerator

    T_COMMA   shift, and go to state 184
    T_RCURLY  shift, and go to state 185


State 149

  119 enumerator_list: enumerator .

    $default  reduce using rule 119 (enumerator_list)


State 150

   99 struct_or_union_specifier: struct_or_union T_IDENTIFIER T_LCURLY . struct_declaration_list T_RCURLY

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    struct_declaration_list    go to state 186
    struct_declaration         go to state 152
    specifier_qualifier_list   go to state 153
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 151

  100 struct_or_union_specifier: struct_or_union T_LCURLY struct_declaration_list . T_RCURLY
  105 struct_declaration_list: struct_declaration_list . struct_declaration

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_RCURLY     shift, and go to state 187
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    struct_declaration         go to state 188
    specifier_qualifier_list   go to state 153
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 152

  104 struct_declaration_list: struct_declaration .

    $default  reduce using rule 104 (struct_declaration_list)


State 153

  106 struct_declaration: specifier_qualifier_list . struct_declarator_list T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 189
    T_COLON       shift, and go to state 190
    T_LBRACKET    shift, and go to state 191
    T_STAR        shift, and go to state 112

    struct_declarator_list  go to state 192
    struct_declarator       go to state 193
    declarator              go to state 194
    direct_declarator       go to state 195
    pointer                 go to state 196


State 154

  155 direct_abstract_declarator: T_LSQRBRACKET T_RSQRBRACKET .

    $default  reduce using rule 155 (direct_abstract_declarator)


State 155

   75 constant_expression: conditional_expression .

    $default  reduce using rule 75 (constant_expression)


State 156

  156 direct_abstract_declarator: T_LSQRBRACKET constant_expression . T_RSQRBRACKET

    T_RSQRBRACKET  shift, and go to state 197


State 157

   85 storage_class_specifier: T_AUTO .

    $default  reduce using rule 85 (storage_class_specifier)


State 158

   83 storage_class_specifier: T_EXTERN .

    $default  reduce using rule 83 (storage_class_specifier)


State 159

  159 direct_abstract_declarator: T_LBRACKET T_RBRACKET .

    $default  reduce using rule 159 (direct_abstract_declarator)


State 160

   86 storage_class_specifier: T_REGISTER .

    $default  reduce using rule 86 (storage_class_specifier)


State 161

   84 storage_class_specifier: T_STATIC .

    $default  reduce using rule 84 (storage_class_specifier)


State 162

   82 storage_class_specifier: T_TYPEDEF .

    $default  reduce using rule 82 (storage_class_specifier)


State 163

  144 parameter_declaration: declaration_specifiers . declarator
  145                      | declaration_specifiers . abstract_declarator
  146                      | declaration_specifiers .

    T_IDENTIFIER   shift, and go to state 189
    T_LSQRBRACKET  shift, and go to state 110
    T_LBRACKET     shift, and go to state 198
    T_STAR         shift, and go to state 112

    $default  reduce using rule 146 (parameter_declaration)

    declarator                  go to state 199
    direct_declarator           go to state 195
    pointer                     go to state 200
    abstract_declarator         go to state 201
    direct_abstract_declarator  go to state 115


State 164

   76 declaration_specifiers: storage_class_specifier .
   77                       | storage_class_specifier . declaration_specifiers

    T_AUTO       shift, and go to state 157
    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_EXTERN     shift, and go to state 158
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_REGISTER   shift, and go to state 160
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STATIC     shift, and go to state 161
    T_STRUCT     shift, and go to state 48
    T_TYPEDEF    shift, and go to state 162
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    $default  reduce using rule 76 (declaration_specifiers)

    declaration_specifiers     go to state 202
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166


State 165

   78 declaration_specifiers: type_specifier .
   79                       | type_specifier . declaration_specifiers

    T_AUTO       shift, and go to state 157
    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_EXTERN     shift, and go to state 158
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_REGISTER   shift, and go to state 160
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STATIC     shift, and go to state 161
    T_STRUCT     shift, and go to state 48
    T_TYPEDEF    shift, and go to state 162
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    $default  reduce using rule 78 (declaration_specifiers)

    declaration_specifiers     go to state 203
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166


State 166

   80 declaration_specifiers: type_qualifier .
   81                       | type_qualifier . declaration_specifiers

    T_AUTO       shift, and go to state 157
    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_EXTERN     shift, and go to state 158
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_REGISTER   shift, and go to state 160
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STATIC     shift, and go to state 161
    T_STRUCT     shift, and go to state 48
    T_TYPEDEF    shift, and go to state 162
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    $default  reduce using rule 80 (declaration_specifiers)

    declaration_specifiers     go to state 204
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166


State 167

  160 direct_abstract_declarator: T_LBRACKET parameter_type_list . T_RBRACKET

    T_RBRACKET  shift, and go to state 205


State 168

  140 parameter_type_list: parameter_list .
  141                    | parameter_list . T_COMMA ELLIPSIS
  143 parameter_list: parameter_list . T_COMMA parameter_declaration

    T_COMMA  shift, and go to state 206

    $default  reduce using rule 140 (parameter_type_list)


State 169

  142 parameter_list: parameter_declaration .

    $default  reduce using rule 142 (parameter_list)


State 170

  154 direct_abstract_declarator: T_LBRACKET abstract_declarator . T_RBRACKET

    T_RBRACKET  shift, and go to state 207


State 171

  138 type_qualifier_list: type_qualifier .

    $default  reduce using rule 138 (type_qualifier_list)


State 172

  136 pointer: T_STAR pointer .

    $default  reduce using rule 136 (pointer)


State 173

  135 pointer: T_STAR type_qualifier_list .
  137        | T_STAR type_qualifier_list . pointer
  139 type_qualifier_list: type_qualifier_list . type_qualifier

    T_CONST     shift, and go to state 106
    T_STAR      shift, and go to state 112
    T_VOLATILE  shift, and go to state 53

    $default  reduce using rule 135 (pointer)

    type_qualifier  go to state 208
    pointer         go to state 209


State 174

  153 abstract_declarator: pointer direct_abstract_declarator .
  157 direct_abstract_declarator: direct_abstract_declarator . T_LSQRBRACKET T_RSQRBRACKET
  158                           | direct_abstract_declarator . T_LSQRBRACKET constant_expression T_RSQRBRACKET
  161                           | direct_abstract_declarator . T_LBRACKET T_RBRACKET
  162                           | direct_abstract_declarator . T_LBRACKET parameter_type_list T_RBRACKET

    T_LSQRBRACKET  shift, and go to state 175
    T_LBRACKET     shift, and go to state 176

    $default  reduce using rule 153 (abstract_declarator)


State 175

  157 direct_abstract_declarator: direct_abstract_declarator T_LSQRBRACKET . T_RSQRBRACKET
  158                           | direct_abstract_declarator T_LSQRBRACKET . constant_expression T_RSQRBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_RSQRBRACKET     shift, and go to state 210
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 211


State 176

  161 direct_abstract_declarator: direct_abstract_declarator T_LBRACKET . T_RBRACKET
  162                           | direct_abstract_declarator T_LBRACKET . parameter_type_list T_RBRACKET

    T_AUTO       shift, and go to state 157
    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_EXTERN     shift, and go to state 158
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_RBRACKET   shift, and go to state 212
    T_REGISTER   shift, and go to state 160
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STATIC     shift, and go to state 161
    T_STRUCT     shift, and go to state 48
    T_TYPEDEF    shift, and go to state 162
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    declaration_specifiers     go to state 163
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166
    parameter_type_list        go to state 213
    parameter_list             go to state 168
    parameter_declaration      go to state 169


State 177

   29 cast_expression: T_LBRACKET type_name T_RBRACKET cast_expression .

    $default  reduce using rule 29 (cast_expression)


State 178

    7 postfix_expression: postfix_expression T_LSQRBRACKET expression T_RSQRBRACKET .

    $default  reduce using rule 7 (postfix_expression)


State 179

   15 argument_expression_list: argument_expression_list T_COMMA . assignment_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 19
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 214


State 180

    9 postfix_expression: postfix_expression T_LBRACKET argument_expression_list T_RBRACKET .

    $default  reduce using rule 9 (postfix_expression)


State 181

   59 conditional_expression: logical_or_expression T_QUESTIONMARK expression T_COLON . conditional_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 215


State 182

  117 enum_specifier: T_ENUM T_IDENTIFIER T_LCURLY enumerator_list . T_RCURLY
  120 enumerator_list: enumerator_list . T_COMMA enumerator

    T_COMMA   shift, and go to state 184
    T_RCURLY  shift, and go to state 216


State 183

  122 enumerator: T_IDENTIFIER T_ASSIGN . constant_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 217


State 184

  120 enumerator_list: enumerator_list T_COMMA . enumerator

    T_IDENTIFIER  shift, and go to state 147

    enumerator  go to state 218


State 185

  116 enum_specifier: T_ENUM T_LCURLY enumerator_list T_RCURLY .

    $default  reduce using rule 116 (enum_specifier)


State 186

   99 struct_or_union_specifier: struct_or_union T_IDENTIFIER T_LCURLY struct_declaration_list . T_RCURLY
  105 struct_declaration_list: struct_declaration_list . struct_declaration

    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_RCURLY     shift, and go to state 219
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STRUCT     shift, and go to state 48
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54

    type_specifier             go to state 55
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    struct_declaration         go to state 188
    specifier_qualifier_list   go to state 153
    enum_specifier             go to state 59
    type_qualifier             go to state 60


State 187

  100 struct_or_union_specifier: struct_or_union T_LCURLY struct_declaration_list T_RCURLY .

    $default  reduce using rule 100 (struct_or_union_specifier)


State 188

  105 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 105 (struct_declaration_list)


State 189

  127 direct_declarator: T_IDENTIFIER .

    $default  reduce using rule 127 (direct_declarator)


State 190

  114 struct_declarator: T_COLON . constant_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 220


State 191

  128 direct_declarator: T_LBRACKET . declarator T_RBRACKET

    T_IDENTIFIER  shift, and go to state 189
    T_LBRACKET    shift, and go to state 191
    T_STAR        shift, and go to state 112

    declarator         go to state 221
    direct_declarator  go to state 195
    pointer            go to state 196


State 192

  106 struct_declaration: specifier_qualifier_list struct_declarator_list . T_SEMICOLON
  112 struct_declarator_list: struct_declarator_list . T_COMMA struct_declarator

    T_COMMA      shift, and go to state 222
    T_SEMICOLON  shift, and go to state 223


State 193

  111 struct_declarator_list: struct_declarator .

    $default  reduce using rule 111 (struct_declarator_list)


State 194

  113 struct_declarator: declarator .
  115                  | declarator . T_COLON constant_expression

    T_COLON  shift, and go to state 224

    $default  reduce using rule 113 (struct_declarator)


State 195

  126 declarator: direct_declarator .
  129 direct_declarator: direct_declarator . T_LSQRBRACKET constant_expression T_RSQRBRACKET
  130                  | direct_declarator . T_LSQRBRACKET T_RSQRBRACKET
  131                  | direct_declarator . T_LBRACKET parameter_type_list T_RBRACKET
  132                  | direct_declarator . T_LBRACKET identifier_list T_RBRACKET
  133                  | direct_declarator . T_LBRACKET T_RBRACKET

    T_LSQRBRACKET  shift, and go to state 225
    T_LBRACKET     shift, and go to state 226

    $default  reduce using rule 126 (declarator)


State 196

  125 declarator: pointer . direct_declarator

    T_IDENTIFIER  shift, and go to state 189
    T_LBRACKET    shift, and go to state 191

    direct_declarator  go to state 227


State 197

  156 direct_abstract_declarator: T_LSQRBRACKET constant_expression T_RSQRBRACKET .

    $default  reduce using rule 156 (direct_abstract_declarator)


State 198

  128 direct_declarator: T_LBRACKET . declarator T_RBRACKET
  154 direct_abstract_declarator: T_LBRACKET . abstract_declarator T_RBRACKET
  159                           | T_LBRACKET . T_RBRACKET
  160                           | T_LBRACKET . parameter_type_list T_RBRACKET

    T_IDENTIFIER   shift, and go to state 189
    T_LSQRBRACKET  shift, and go to state 110
    T_AUTO         shift, and go to state 157
    T_CHAR         shift, and go to state 40
    T_CONST        shift, and go to state 106
    T_DOUBLE       shift, and go to state 42
    T_EXTERN       shift, and go to state 158
    T_FLOAT        shift, and go to state 43
    T_INT          shift, and go to state 44
    T_LBRACKET     shift, and go to state 198
    T_LONG         shift, and go to state 45
    T_RBRACKET     shift, and go to state 159
    T_REGISTER     shift, and go to state 160
    T_SHORT        shift, and go to state 46
    T_SIGNED       shift, and go to state 47
    T_STAR         shift, and go to state 112
    T_STATIC       shift, and go to state 161
    T_STRUCT       shift, and go to state 48
    T_TYPEDEF      shift, and go to state 162
    T_TYPE_NAME    shift, and go to state 49
    T_UNION        shift, and go to state 50
    T_UNSIGNED     shift, and go to state 51
    T_VOID         shift, and go to state 52
    T_VOLATILE     shift, and go to state 53
    T_ENUM         shift, and go to state 54

    declaration_specifiers      go to state 163
    storage_class_specifier     go to state 164
    type_specifier              go to state 165
    struct_or_union_specifier   go to state 56
    struct_or_union             go to state 57
    enum_specifier              go to state 59
    type_qualifier              go to state 166
    declarator                  go to state 221
    direct_declarator           go to state 195
    pointer                     go to state 200
    parameter_type_list         go to state 167
    parameter_list              go to state 168
    parameter_declaration       go to state 169
    abstract_declarator         go to state 170
    direct_abstract_declarator  go to state 115


State 199

  144 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 144 (parameter_declaration)


State 200

  125 declarator: pointer . direct_declarator
  151 abstract_declarator: pointer .
  153                    | pointer . direct_abstract_declarator

    T_IDENTIFIER   shift, and go to state 189
    T_LSQRBRACKET  shift, and go to state 110
    T_LBRACKET     shift, and go to state 198

    $default  reduce using rule 151 (abstract_declarator)

    direct_declarator           go to state 227
    direct_abstract_declarator  go to state 174


State 201

  145 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 145 (parameter_declaration)


State 202

   77 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 77 (declaration_specifiers)


State 203

   79 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 79 (declaration_specifiers)


State 204

   81 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 81 (declaration_specifiers)


State 205

  160 direct_abstract_declarator: T_LBRACKET parameter_type_list T_RBRACKET .

    $default  reduce using rule 160 (direct_abstract_declarator)


State 206

  141 parameter_type_list: parameter_list T_COMMA . ELLIPSIS
  143 parameter_list: parameter_list T_COMMA . parameter_declaration

    T_AUTO       shift, and go to state 157
    T_CHAR       shift, and go to state 40
    T_CONST      shift, and go to state 106
    T_DOUBLE     shift, and go to state 42
    T_EXTERN     shift, and go to state 158
    T_FLOAT      shift, and go to state 43
    T_INT        shift, and go to state 44
    T_LONG       shift, and go to state 45
    T_REGISTER   shift, and go to state 160
    T_SHORT      shift, and go to state 46
    T_SIGNED     shift, and go to state 47
    T_STATIC     shift, and go to state 161
    T_STRUCT     shift, and go to state 48
    T_TYPEDEF    shift, and go to state 162
    T_TYPE_NAME  shift, and go to state 49
    T_UNION      shift, and go to state 50
    T_UNSIGNED   shift, and go to state 51
    T_VOID       shift, and go to state 52
    T_VOLATILE   shift, and go to state 53
    T_ENUM       shift, and go to state 54
    ELLIPSIS     shift, and go to state 228

    declaration_specifiers     go to state 163
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166
    parameter_declaration      go to state 229


State 207

  154 direct_abstract_declarator: T_LBRACKET abstract_declarator T_RBRACKET .

    $default  reduce using rule 154 (direct_abstract_declarator)


State 208

  139 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 139 (type_qualifier_list)


State 209

  137 pointer: T_STAR type_qualifier_list pointer .

    $default  reduce using rule 137 (pointer)


State 210

  157 direct_abstract_declarator: direct_abstract_declarator T_LSQRBRACKET T_RSQRBRACKET .

    $default  reduce using rule 157 (direct_abstract_declarator)


State 211

  158 direct_abstract_declarator: direct_abstract_declarator T_LSQRBRACKET constant_expression . T_RSQRBRACKET

    T_RSQRBRACKET  shift, and go to state 230


State 212

  161 direct_abstract_declarator: direct_abstract_declarator T_LBRACKET T_RBRACKET .

    $default  reduce using rule 161 (direct_abstract_declarator)


State 213

  162 direct_abstract_declarator: direct_abstract_declarator T_LBRACKET parameter_type_list . T_RBRACKET

    T_RBRACKET  shift, and go to state 231


State 214

   15 argument_expression_list: argument_expression_list T_COMMA assignment_expression .

    $default  reduce using rule 15 (argument_expression_list)


State 215

   59 conditional_expression: logical_or_expression T_QUESTIONMARK expression T_COLON conditional_expression .

    $default  reduce using rule 59 (conditional_expression)


State 216

  117 enum_specifier: T_ENUM T_IDENTIFIER T_LCURLY enumerator_list T_RCURLY .

    $default  reduce using rule 117 (enum_specifier)


State 217

  122 enumerator: T_IDENTIFIER T_ASSIGN constant_expression .

    $default  reduce using rule 122 (enumerator)


State 218

  120 enumerator_list: enumerator_list T_COMMA enumerator .

    $default  reduce using rule 120 (enumerator_list)


State 219

   99 struct_or_union_specifier: struct_or_union T_IDENTIFIER T_LCURLY struct_declaration_list T_RCURLY .

    $default  reduce using rule 99 (struct_or_union_specifier)


State 220

  114 struct_declarator: T_COLON constant_expression .

    $default  reduce using rule 114 (struct_declarator)


State 221

  128 direct_declarator: T_LBRACKET declarator . T_RBRACKET

    T_RBRACKET  shift, and go to state 232


State 222

  112 struct_declarator_list: struct_declarator_list T_COMMA . struct_declarator

    T_IDENTIFIER  shift, and go to state 189
    T_COLON       shift, and go to state 190
    T_LBRACKET    shift, and go to state 191
    T_STAR        shift, and go to state 112

    struct_declarator  go to state 233
    declarator         go to state 194
    direct_declarator  go to state 195
    pointer            go to state 196


State 223

  106 struct_declaration: specifier_qualifier_list struct_declarator_list T_SEMICOLON .

    $default  reduce using rule 106 (struct_declaration)


State 224

  115 struct_declarator: declarator T_COLON . constant_expression

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 234


State 225

  129 direct_declarator: direct_declarator T_LSQRBRACKET . constant_expression T_RSQRBRACKET
  130                  | direct_declarator T_LSQRBRACKET . T_RSQRBRACKET

    T_IDENTIFIER      shift, and go to state 1
    SIZEOF            shift, and go to state 7
    T_PLUS_PLUS       shift, and go to state 8
    T_MINUS_MINUS     shift, and go to state 9
    T_AMPERSAND       shift, and go to state 10
    T_CONST           shift, and go to state 2
    T_EXCLAMATION     shift, and go to state 11
    T_LBRACKET        shift, and go to state 12
    T_MINUS           shift, and go to state 13
    T_PLUS            shift, and go to state 14
    T_RSQRBRACKET     shift, and go to state 235
    T_STAR            shift, and go to state 15
    T_STRING_LITERAL  shift, and go to state 4
    T_TILDE           shift, and go to state 16

    primary_expression         go to state 17
    postfix_expression         go to state 18
    unary_expression           go to state 80
    unary_operator             go to state 20
    cast_expression            go to state 21
    multiplicative_expression  go to state 22
    additive_expression        go to state 23
    shift_expression           go to state 24
    relational_expression      go to state 25
    equality_expression        go to state 26
    and_expression             go to state 27
    exclusive_or_expression    go to state 28
    inclusive_or_expression    go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 155
    constant_expression        go to state 236


State 226

  131 direct_declarator: direct_declarator T_LBRACKET . parameter_type_list T_RBRACKET
  132                  | direct_declarator T_LBRACKET . identifier_list T_RBRACKET
  133                  | direct_declarator T_LBRACKET . T_RBRACKET

    T_IDENTIFIER  shift, and go to state 237
    T_AUTO        shift, and go to state 157
    T_CHAR        shift, and go to state 40
    T_CONST       shift, and go to state 106
    T_DOUBLE      shift, and go to state 42
    T_EXTERN      shift, and go to state 158
    T_FLOAT       shift, and go to state 43
    T_INT         shift, and go to state 44
    T_LONG        shift, and go to state 45
    T_RBRACKET    shift, and go to state 238
    T_REGISTER    shift, and go to state 160
    T_SHORT       shift, and go to state 46
    T_SIGNED      shift, and go to state 47
    T_STATIC      shift, and go to state 161
    T_STRUCT      shift, and go to state 48
    T_TYPEDEF     shift, and go to state 162
    T_TYPE_NAME   shift, and go to state 49
    T_UNION       shift, and go to state 50
    T_UNSIGNED    shift, and go to state 51
    T_VOID        shift, and go to state 52
    T_VOLATILE    shift, and go to state 53
    T_ENUM        shift, and go to state 54

    declaration_specifiers     go to state 163
    storage_class_specifier    go to state 164
    type_specifier             go to state 165
    struct_or_union_specifier  go to state 56
    struct_or_union            go to state 57
    enum_specifier             go to state 59
    type_qualifier             go to state 166
    parameter_type_list        go to state 239
    parameter_list             go to state 168
    parameter_declaration      go to state 169
    identifier_list            go to state 240


State 227

  125 declarator: pointer direct_declarator .
  129 direct_declarator: direct_declarator . T_LSQRBRACKET constant_expression T_RSQRBRACKET
  130                  | direct_declarator . T_LSQRBRACKET T_RSQRBRACKET
  131                  | direct_declarator . T_LBRACKET parameter_type_list T_RBRACKET
  132                  | direct_declarator . T_LBRACKET identifier_list T_RBRACKET
  133                  | direct_declarator . T_LBRACKET T_RBRACKET

    T_LSQRBRACKET  shift, and go to state 225
    T_LBRACKET     shift, and go to state 226

    $default  reduce using rule 125 (declarator)


State 228

  141 parameter_type_list: parameter_list T_COMMA ELLIPSIS .

    $default  reduce using rule 141 (parameter_type_list)


State 229

  143 parameter_list: parameter_list T_COMMA parameter_declaration .

    $default  reduce using rule 143 (parameter_list)


State 230

  158 direct_abstract_declarator: direct_abstract_declarator T_LSQRBRACKET constant_expression T_RSQRBRACKET .

    $default  reduce using rule 158 (direct_abstract_declarator)


State 231

  162 direct_abstract_declarator: direct_abstract_declarator T_LBRACKET parameter_type_list T_RBRACKET .

    $default  reduce using rule 162 (direct_abstract_declarator)


State 232

  128 direct_declarator: T_LBRACKET declarator T_RBRACKET .

    $default  reduce using rule 128 (direct_declarator)


State 233

  112 struct_declarator_list: struct_declarator_list T_COMMA struct_declarator .

    $default  reduce using rule 112 (struct_declarator_list)


State 234

  115 struct_declarator: declarator T_COLON constant_expression .

    $default  reduce using rule 115 (struct_declarator)


State 235

  130 direct_declarator: direct_declarator T_LSQRBRACKET T_RSQRBRACKET .

    $default  reduce using rule 130 (direct_declarator)


State 236

  129 direct_declarator: direct_declarator T_LSQRBRACKET constant_expression . T_RSQRBRACKET

    T_RSQRBRACKET  shift, and go to state 241


State 237

  147 identifier_list: T_IDENTIFIER .

    $default  reduce using rule 147 (identifier_list)


State 238

  133 direct_declarator: direct_declarator T_LBRACKET T_RBRACKET .

    $default  reduce using rule 133 (direct_declarator)


State 239

  131 direct_declarator: direct_declarator T_LBRACKET parameter_type_list . T_RBRACKET

    T_RBRACKET  shift, and go to state 242


State 240

  132 direct_declarator: direct_declarator T_LBRACKET identifier_list . T_RBRACKET
  148 identifier_list: identifier_list . T_COMMA T_IDENTIFIER

    T_COMMA     shift, and go to state 243
    T_RBRACKET  shift, and go to state 244


State 241

  129 direct_declarator: direct_declarator T_LSQRBRACKET constant_expression T_RSQRBRACKET .

    $default  reduce using rule 129 (direct_declarator)


State 242

  131 direct_declarator: direct_declarator T_LBRACKET parameter_type_list T_RBRACKET .

    $default  reduce using rule 131 (direct_declarator)


State 243

  148 identifier_list: identifier_list T_COMMA . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 245


State 244

  132 direct_declarator: direct_declarator T_LBRACKET identifier_list T_RBRACKET .

    $default  reduce using rule 132 (direct_declarator)


State 245

  148 identifier_list: identifier_list T_COMMA T_IDENTIFIER .

    $default  reduce using rule 148 (identifier_list)
